<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.org.bank.dao.StudentInfoDTOMapper" >
  <resultMap id="BaseResultMap" type="com.org.bank.domain.StudentInfoDTO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="student_name" property="studentName" jdbcType="VARCHAR" />
    <result column="student_email" property="studentEmail" jdbcType="VARCHAR" />
    <result column="student_iphone" property="studentIphone" jdbcType="VARCHAR" />
    <result column="student_password" property="studentPassword" jdbcType="VARCHAR" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="class_name" property="className" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, student_name, student_email, student_iphone, class_id, student_password
  </sql>

  <sql id="where_fragement">
  where 1 = 1
  <if test="record != null">
    <if test="record.id and record.id != ''">
      and id = #{record.id}
    </if>
    <if test="record.studentName and record.studentName != ''">
      and student_name = #{record.studentName}
    </if>
    <if test="record.studentEmail and record.studentEmail != ''">
      and student_email = #{record.studentEmail}
    </if>
    <if test="record.studentIphone and record.studentIphone != ''">
      and student_iphone = #{record.studentIphone}
    </if>
    <if test="record.classId and record.classId != ''">
      and class_id = #{record.classId}
    </if>
  </if>
</sql>

  <sql id="student_class_Column_List" >
    student_info.id id, student_info.student_name student_name, student_info.student_email student_email, student_info.student_iphone student_iphone,
    student_info.class_id class_id, student_info.student_password student_password,
    class.class_name class_name
  </sql>

  <sql id="student_class_where_fragement">
    where 1 = 1
    <if test="record != null">
      <if test="record.id and record.id != ''">
        and student_info.id = #{record.id}
      </if>
      <if test="record.studentName and record.studentName != ''">
        and student_info.student_name = #{record.studentName}
      </if>
      <if test="record.studentEmail and record.studentEmail != ''">
        and student_info.student_email = #{record.studentEmail}
      </if>
      <if test="record.studentIphone and record.studentIphone != ''">
        and student_info.student_iphone = #{record.studentIphone}
      </if>
      <if test="record.classId and record.classId != ''">
        and student_info.class_id = #{record.classId}
      </if>
    </if>
  </sql>

  <!-- 分页专用 -->
  <sql id="pagination_tail" >
    limit #{pager.pageOffset} , #{pager.rows}
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT
	student_info.id,
	student_info.student_email,
	student_info.student_iphone,
	student_info.student_name,
	class.class_name
	FROM
	student_info
	LEFT JOIN class ON student_info.class_id = class.id
    where student_info.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectPasswordByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    *
    from student_info
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectList" resultMap="BaseResultMap">
    select
    <include refid="student_class_Column_List" />
    FROM
    student_info
    LEFT JOIN class ON student_info.class_id = class.id
    <include refid="student_class_where_fragement"/>
    ORDER BY id desc
    <if test="pager != null" >
      <include refid="pagination_tail" />
    </if>
  </select>

  <select id="countTotal" resultType="Long">
    select
    count(1)
    from student_info
    <include refid="student_class_where_fragement"/>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student_info
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.org.bank.domain.StudentInfoDTO" >
    insert into student_info (student_name, student_email,
      student_iphone, student_password, class_id
      )
    values (#{studentName,jdbcType=VARCHAR}, #{studentEmail,jdbcType=VARCHAR},
      #{studentIphone,jdbcType=VARCHAR}, #{studentPassword,jdbcType=VARCHAR}, #{classId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.org.bank.domain.StudentInfoDTO" >
    insert into student_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentName != null" >
        student_name,
      </if>
      <if test="studentEmail != null" >
        student_email,
      </if>
      <if test="studentIphone != null" >
        student_iphone,
      </if>
      <if test="studentPassword != null" >
        student_password,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentEmail != null" >
        #{studentEmail,jdbcType=VARCHAR},
      </if>
      <if test="studentIphone != null" >
        #{studentIphone,jdbcType=VARCHAR},
      </if>
      <if test="studentPassword != null" >
        #{studentPassword,jdbcType=VARCHAR},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.org.bank.domain.StudentInfoDTO" >
    update student_info
    <set >
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentEmail != null" >
        student_email = #{studentEmail,jdbcType=VARCHAR},
      </if>
      <if test="studentIphone != null" >
        student_iphone = #{studentIphone,jdbcType=VARCHAR},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.org.bank.domain.StudentInfoDTO" >
    update student_info
    set student_name = #{studentName,jdbcType=VARCHAR},
      student_email = #{studentEmail,jdbcType=VARCHAR},
      student_iphone = #{studentIphone,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updatePasswordByPrimaryKey" parameterType="com.org.bank.domain.StudentInfoDTO" >
    update student_info
    set student_password = #{newStudentPassword,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>