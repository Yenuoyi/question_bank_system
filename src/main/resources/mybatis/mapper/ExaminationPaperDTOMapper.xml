<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.org.bank.dao.ExaminationPaperDTOMapper" >
  <resultMap id="BaseResultMap" type="com.org.bank.domain.ExaminationPaperDTO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="examiner_id" property="examinerId" jdbcType="INTEGER" />
    <result column="examiner_type" property="examinerType" jdbcType="INTEGER" />
    <result column="examination_paper_name" property="examinationPaperName" jdbcType="VARCHAR" />
    <result column="language_classification_id" property="languageClassificationId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="language_classification_name" property="languageClassificationName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    a.id, a.examiner_id, a.examiner_type, a.examination_paper_name,a.language_classification_id,
    a.status,b.language_classification_name
  </sql>

  <sql id="where_fragement">
    where 1 = 1
    <if test="record != null">
      <if test="record.id and record.id != ''">
        and a.id = #{record.id}
      </if>
      <if test="record.examinerId and record.examinerId != ''">
        and a.examiner_id = #{record.examinerId}
      </if>
      <if test="record.examinerType and record.examinerType != ''">
        and a.examiner_type = #{record.examinerType}
      </if>
      <if test="record.examinationPaperName and record.examinationPaperName != ''">
        and a.examination_paper_name like  CONCAT('%', #{record.examinationPaperName}, '%')
      </if>
      <if test="record.languageClassificationId and record.languageClassificationId != ''">
        and a.language_classification_id = #{record.languageClassificationId}
      </if>
      <if test="record.status">
        and a.status = #{record.status}
      </if>
      <if test="record.languageClassificationName and record.languageClassificationName != ''">
        and b.language_classification_name = #{record.languageClassificationName}
      </if>
    </if>
  </sql>

  <!-- 分页专用 -->
  <sql id="pagination_tail" >
    limit #{pager.pageOffset} , #{pager.rows}
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from FROM examination_paper a LEFT JOIN language_classification b ON a.language_classification_id = b.language_classification_id
    where a.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    FROM examination_paper a INNER JOIN language_classification b ON a.language_classification_id = b.language_classification_id
    <include refid="where_fragement"/>
    ORDER BY a.id desc
    <if test="pager != null" >
      <include refid="pagination_tail" />
    </if>
  </select>

  <select id="countTotal" resultType="Long">
    select
    count(1)
    FROM examination_paper a LEFT JOIN language_classification b ON a.language_classification_id = b.language_classification_id
    <include refid="where_fragement"/>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from examination_paper
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.org.bank.domain.ExaminationPaperDTO" >
    insert into examination_paper (examiner_id, examiner_type, examination_paper_name,language_classification_id,status
    )
    values (#{examinerId,jdbcType=INTEGER}, #{examinerType,jdbcType=INTEGER}, #{examinationPaperName,jdbcType=VARCHAR}
    ,#{languageClassificationId,jdbcType=INTEGER},#{status,jdbcType=INTEGER}
    )
    <selectKey resultType="integer" keyColumn="id" keyProperty="id" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>

  <insert id="insertSelective" parameterType="com.org.bank.domain.ExaminationPaperDTO" >
    insert into examination_paper
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="examinerId != null" >
        examiner_id,
      </if>
      <if test="examinerType != null" >
        examiner_type,
      </if>
      <if test="examinationPaperName != null" >
        examination_paper_name,
      </if>
      <if test="languageClassificationId != null" >
        language_classification_id,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="examinerId != null" >
        #{examinerId,jdbcType=INTEGER},
      </if>
      <if test="examinerType != null" >
        #{examinerType,jdbcType=INTEGER},
      </if>
      <if test="examinationPaperName != null" >
        #{examinationPaperName,jdbcType=INTEGER},
      </if>
      <if test="languageClassificationId != null" >
        #{languageClassificationId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
    <selectKey resultType="integer" keyColumn="id" keyProperty="id" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.org.bank.domain.ExaminationPaperDTO" >
    update examination_paper
    <set >
      <if test="examinerId != null" >
        examiner_id = #{examinerId,jdbcType=INTEGER},
      </if>
      <if test="examinerType != null" >
        examiner_type = #{examinerType,jdbcType=INTEGER},
      </if>
      <if test="examinationPaperName != null" >
        examination_paper_name = #{examinationPaperName,jdbcType=VARCHAR},
      </if>
      <if test="languageClassificationId != null" >
        language_classification_id = #{languageClassificationId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.org.bank.domain.ExaminationPaperDTO" >
    update examination_paper
    set examiner_id = #{examinerId,jdbcType=INTEGER},
      examiner_type = #{examinerType,jdbcType=INTEGER}
      examination_paper_name = #{examinationPaperName,jdbcType=VARCHAR},
      language_classification_id = #{languageClassificationId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>